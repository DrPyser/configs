try %{ source "%val{config}/nix.kak" }
try %{ source "%val{config}/plugins/plug.kak/rc/plug.kak" }
try %{ source "%val{runtime}/rc/filetype/javascript.kak" }
try %{ source "%val{runtime}/rc/filetype/python.kak" }
try %{ source "%val{runtime}/rc/filetype/yaml.kak" }
try %{ source "%val{runtime}/rc/filetype/nix.kak" }

map global normal <#> ': comment-line<ret>'
map global normal <a-#> ': comment-block<ret>'

plug "andreyorst/fzf.kak"

plug "andreyorst/smarttab.kak" defer smarttab %{
  set-option global softtabstop 4
} config %{
  hook global winsetoption filetype=nix %{
    expandtab
    set-option buffer tabstop 2
  }
  hook global winsetoption filetype=yaml %{
    smarttab
    set-option buffer tabstop 2
  }
  hook global winsetoption filetype=python %{
    expandtab
    set-option buffer tabstop 4
    set-option buffer indentwidth 4
  }
  hook global winsetoption filetype=makefile %{
    noexpandtab
  }
}

plug "alexherbo2/surround.kak" defer surround %{
  map global user s ': surround<ret>' -docstring 'Enter surround mode'
}

plug "git@github.com:alexherbo2/auto-pairs.kak.git" defer auto-pairs %{
  hook global WinCreate .* %{
      auto-pairs-enable
  }
}

set-option global tabstop 2
set-option global indentwidth 2

def -override reload_config %{
  try %{ source "%val{config}/kakrc" }
}

hook global WinSetOption filetype=python %{
  set-option buffer indentwidth 4
}

hook global WinSetOption filetype=javascript %{
  set buffer lintcmd './node_modules/.bin/eslint --format=node_modules/eslint-formatter-kakoune -c .eslintrc.yml'
  lint-enable
  set buffer formatcmd "./node_modules/.bin/prettier --stdin-filepath ${kak_buffile}"
}

hook global WinSetOption filetype=css %{
  lint-enable
  set buffer comment_block_begin "/*"
  set buffer comment_block_end "*/"
}

hook global WinSetOption filetype=markdown %{
  remove-highlighter buffer/wrapping
  add-highlighter buffer/wrapping wrap -width 120 -marker '⮩ ' -word
}

remove-highlighter global/wrapping
add-highlighter global/wrapping wrap -marker '⮩ '
remove-highlighter global/matching
add-highlighter global/matching show-matching

hook global WinCreate ^[^*]+$ %{editorconfig-load}
hook global BufOpenFile .* editorconfig-load
hook global BufNewFile .* editorconfig-load

map global normal <c-p> ': fzf-mode<ret>'

def mkdir %{ nop %sh{ mkdir -p $(dirname $kak_buffile) } }

def ide %{
  rename-client main
  set-option global jumpclient main

  new rename-client tools
  set-option global toolsclient tools

  new rename-client docs
  set-option global docsclient docs
}


def -override insert_unicode -params 1 %{
  execute-keys '! grep -i "$1" ~/.config/kak/unicode.txt | cut -d\; -f1 | ascii2uni -q -a R -p' 
}


